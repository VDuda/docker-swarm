- name: DB container is running
  shell: >
    /data/scripts/deploy.sh \
      {{ container_db_image }} \
      {{ container_db_name }} \
      {{ container_db_internal_port }} \
      {{ container_db_volumes }} \
  when: container_db_image is defined
  tags: [service]

- name: DB address is retrieved from Consul
  consul_kv:
    action: get
    key: "services/{{ container_db_image }}/{{ container_db_name }}"
  register: container_db_address
  when: container_db_image is defined
  tags: [service]

- name: Set envs
  set_fact:
    container_envs: '"--env DB_PORT_27017_TCP={{ container_db_address.value.0.Value }}"'
  when: container_db_image is defined
  tags: [service]

- name: Container is running
  shell: >
    /data/scripts/deploy_blue_green.sh \
      {{ container_owner }} \
      {{ container_image }} \
      {{ container_name }} \
      {{ container_internal_port }} \
      {{ container_volumes }} \
      {{ container_envs }}
  tags: [service]

- name: Simulate testing
  shell: sleep 3
  tags: [service]

- name: Color is retrieved from Consul
  consul_kv:
    action: get
    key: "services/{{ container_image }}/color"
  register: container_color
  tags: [service]

- name: Set color
  set_fact:
    container_color: "{{ container_color.value.0.Value }}"
  tags: [service]

- name: nginx config files are present
  template: src=nginx.conf.tmpl.j2 dest=/data/nginx/templates/{{ container_name }}.conf.ctmpl
  tags: [service]

- name: Template is applied
  shell: >
    consul-template \
      -consul localhost:8500 \
      -template "/data/nginx/templates/{{ container_name }}.conf.ctmpl:/data/nginx/includes/{{ container_name }}.conf:docker kill -s HUP nginx" \
      -once
  tags: [service]

- name: Old color is retrieved from Consul
  consul_kv:
    action: get
    key: "services/{{ container_image }}/old-color"
  register: container_old_color
  tags: [service]

- name: Set old color
  set_fact:
    container_old_color: "{{ container_old_color.value.0.Value }}"
  tags: [service]

- name: Old container is stopped
  shell: >
    docker -H tcp://0.0.0.0:2375 stop \
      {{ container_name }}-{{ container_old_color }}
  ignore_errors: yes
  tags: [service]

- name: Consul configs are present
  template:
    src: consul_service.json.j2
    dest: /etc/consul.d/service-{{ container_name }}.json
  register: health_result
  tags: [service]

- name: Consul is restarted
  shell: killall -HUP consul
  when: health_result|changed
  tags: [service]

